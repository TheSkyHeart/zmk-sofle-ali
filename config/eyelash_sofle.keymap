#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150

/ {
    behaviors {

        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.

        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <6 7 20 21 22 35 36 45 46 47 8 9 10 11 12 23 24 25 37 38 19 34 58 32 33 48 49 50 51 63 62 61 60 59>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 42 43 44 52 57 56 55 54 53 41 40 27 26 39>;
            hold-trigger-on-release;
        };


        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <6 7 20 21 22 35 36 45 46 47 8 9 10 11 12 23 24 25 37 38 19 34 58 32 33 48 49 50 51 63 62 61 60 59>;
            // hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 42 43 44 52 57 56 55 54 53 41 40 27 26 39>;
            // hold-trigger-on-release;
        };

        layer_tap: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            tapping-term-ms = <280>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp ESC        &kp N1                &kp N2            &kp N3             &kp N4             &kp N5         &kp UP_ARROW     &kp N6       &kp N7              &kp N8              &kp N9             &kp N0                          &kp ESC
&kp TAB        &kp Q                 &kp W             &kp E              &kp R              &kp T          &kp DOWN_ARROW   &kp Y        &kp U               &kp I               &kp O              &kp P                           &kp BSLH
&kp BACKSPACE  &hm_l LEFT_GUI A  &hm_l LALT S  &hm_l LCTRL D  &hm_shift_l LSHFT F  &kp G          &kp LEFT_ARROW   &kp H        &hm_shift_r LSHFT J  &hm_r RCTRL K  &hm_r RALT L  &hm_r RIGHT_GUI SEMICOLON  &kp APOS
&kp LSHFT      &kp Z                 &kp X             &kp C              &kp V              &kp B          &kp RIGHT_ARROW  &kp N        &kp M               &kp COMMA           &kp DOT            &kp FSLH                        &kp RIGHT_SHIFT
&kp C_MUTE     &kp LEFT_GUI          &kp LEFT_ALT      &kp LCTRL          &mo 3              &lt 1 SPACE    &kp ENTER        &lt 1 ENTER  &mo 4               &kp RIGHT_CONTROL   &mo 2              &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "qwerty";
        };

        layer_1 {
            bindings = <
&studio_unlock  &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans          &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp HOME         &kp UP      &kp END    &kp MINUS         &kp EQUAL
&trans          &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans          &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE      &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7          &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &studio_unlock  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans          &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans          &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans          &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Numbers {
            bindings = <
&trans  &none         &none          &none             &none           &trans    &trans  &trans        &trans        &trans        &trans        &trans     &trans
&trans  &none         &none          &none             &none           &trans    &trans  &kp PERCENT   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT   &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &trans  &kp PLUS      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp ENTER
&trans  &trans        &kp LS(LC(T))  &kp LS(LC(C))     &kp LS(LC(V))   &trans    &trans  &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH  &trans
&trans  &trans        &trans         &trans            &trans          &trans    &trans  &kp N0        &kp COMMA     &kp PERIOD    &trans        &trans
            >;
        };

        Symbols {
            bindings = <
&trans  &trans           &trans            &trans          &trans           &trans         &trans  &trans       &trans                &trans                 &trans         &trans  &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN       &kp HASH        &kp DOLLAR       &kp PERCENT    &trans  &kp CARET    &kp AMPERSAND         &kp ASTERISK           &kp BACKSLASH  &trans  &trans
&trans  &kp TILDE        &kp PLUS          &kp UNDERSCORE  &kp MINUS        &kp PIPE       &trans  &kp COLON    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE      &trans  &trans
&trans  &kp LESS_THAN    &kp GREATER_THAN  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp EQUAL      &trans  &kp PERCENT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none          &trans  &trans
&trans  &trans           &trans            &trans          &trans           &trans         &trans  &trans       &trans                &trans                 &trans         &trans
            >;
        };
    };
};
